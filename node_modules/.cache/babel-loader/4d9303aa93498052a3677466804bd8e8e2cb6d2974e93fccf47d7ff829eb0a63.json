{"ast":null,"code":"// src/ChatGPTLikeUI.tsx\n\n'use client';\n\nvar _jsxFileName = \"/Users/mira/VScode/plgenerator_ui/src/ChatGPTLikeUI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from \"./components/ui/button\";\nimport { Input } from \"./components/ui/input\";\nimport { ScrollArea } from \"./components/ui/scroll-area\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"./components/ui/avatar\";\nimport { PlusCircle, Send, Menu } from 'lucide-react';\n\n// 以下、提供されたコードをそのまま貼り付けます\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatGPTLikeUI() {\n  _s();\n  const [conversations, setConversations] = useState([{\n    id: 1,\n    title: 'New chat',\n    messages: []\n  }]);\n  const [currentConversation, setCurrentConversation] = useState(conversations[0]);\n  const [input, setInput] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      const newUserMessage = {\n        id: currentConversation.messages.length + 1,\n        content: input.trim(),\n        role: 'user'\n      };\n      const updatedConversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, newUserMessage]\n      };\n      setCurrentConversation(updatedConversation);\n      setConversations(conversations.map(conv => conv.id === currentConversation.id ? updatedConversation : conv));\n      setInput('');\n\n      // Simulate assistant response\n      setTimeout(() => {\n        const assistantResponse = {\n          id: updatedConversation.messages.length + 1,\n          content: \"I'm an AI assistant. I'm here to help answer your questions and assist with various tasks. How can I help you today?\",\n          role: 'assistant'\n        };\n        const conversationWithResponse = {\n          ...updatedConversation,\n          messages: [...updatedConversation.messages, assistantResponse]\n        };\n        setCurrentConversation(conversationWithResponse);\n        setConversations(conversations.map(conv => conv.id === currentConversation.id ? conversationWithResponse : conv));\n      }, 1000);\n    }\n  };\n  const startNewConversation = () => {\n    const newConversation = {\n      id: conversations.length + 1,\n      title: 'New chat',\n      messages: []\n    };\n    setConversations([...conversations, newConversation]);\n    setCurrentConversation(newConversation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-gray-900 text-white ${isSidebarOpen ? 'w-64' : 'w-0'} transition-all duration-300 ease-in-out overflow-hidden`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: startNewConversation,\n          variant: \"outline\",\n          className: \"w-full justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n            className: \"mr-2 h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \"New chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n        className: \"h-[calc(100vh-5rem)] px-4\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          className: \"w-full justify-start mb-1 text-left\",\n          onClick: () => setCurrentConversation(conv),\n          children: conv.title\n        }, conv.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white border-b p-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          size: \"icon\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"mr-2\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: currentConversation.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollArea, {\n        className: \"flex-1 p-4\",\n        children: currentConversation.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex mb-4 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-start max-w-[80%] ${message.role === 'user' ? 'flex-row-reverse' : 'flex-row'}`,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: \"w-8 h-8\",\n              children: [/*#__PURE__*/_jsxDEV(AvatarFallback, {\n                children: message.role === 'user' ? 'U' : 'A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AvatarImage, {\n                src: message.role === 'user' ? '/user-avatar.png' : '/assistant-avatar.png'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mx-2 p-3 rounded-lg ${message.role === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleSendMessage();\n          },\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Type your message...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"flex-grow mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            size: \"icon\",\n            disabled: !input.trim(),\n            children: [/*#__PURE__*/_jsxDEV(Send, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Send message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatGPTLikeUI, \"/eyq6E0sMMdlxDXE2lX3+vh9k7Y=\");\n_c = ChatGPTLikeUI;\nvar _c;\n$RefreshReg$(_c, \"ChatGPTLikeUI\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","Button","Input","ScrollArea","Avatar","AvatarFallback","AvatarImage","PlusCircle","Send","Menu","jsxDEV","_jsxDEV","ChatGPTLikeUI","conversations","setConversations","id","title","messages","currentConversation","setCurrentConversation","input","setInput","isSidebarOpen","setIsSidebarOpen","handleSendMessage","trim","newUserMessage","length","content","role","updatedConversation","map","conv","setTimeout","assistantResponse","conversationWithResponse","startNewConversation","newConversation","className","children","onClick","variant","fileName","lineNumber","columnNumber","size","message","src","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/mira/VScode/plgenerator_ui/src/ChatGPTLikeUI.tsx"],"sourcesContent":["// src/ChatGPTLikeUI.tsx\n\n'use client'\n\nimport React, { useState } from 'react';\nimport { Button } from \"./components/ui/button\"\nimport { Input } from \"./components/ui/input\"\nimport { ScrollArea } from \"./components/ui/scroll-area\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"./components/ui/avatar\"\nimport { PlusCircle, Send, Menu } from 'lucide-react'\n\n// 以下、提供されたコードをそのまま貼り付けます\n\ntype Message = {\n  id: number\n  content: string\n  role: 'user' | 'assistant'\n}\n\ntype Conversation = {\n  id: number\n  title: string\n  messages: Message[]\n}\n\nexport default function ChatGPTLikeUI() {\n  const [conversations, setConversations] = useState<Conversation[]>([\n    { id: 1, title: 'New chat', messages: [] }\n  ])\n  const [currentConversation, setCurrentConversation] = useState<Conversation>(conversations[0])\n  const [input, setInput] = useState('')\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      const newUserMessage: Message = {\n        id: currentConversation.messages.length + 1,\n        content: input.trim(),\n        role: 'user'\n      }\n      \n      const updatedConversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, newUserMessage]\n      }\n      \n      setCurrentConversation(updatedConversation)\n      setConversations(conversations.map(conv => \n        conv.id === currentConversation.id ? updatedConversation : conv\n      ))\n      setInput('')\n      \n      // Simulate assistant response\n      setTimeout(() => {\n        const assistantResponse: Message = {\n          id: updatedConversation.messages.length + 1,\n          content: \"I'm an AI assistant. I'm here to help answer your questions and assist with various tasks. How can I help you today?\",\n          role: 'assistant'\n        }\n        const conversationWithResponse = {\n          ...updatedConversation,\n          messages: [...updatedConversation.messages, assistantResponse]\n        }\n        setCurrentConversation(conversationWithResponse)\n        setConversations(conversations.map(conv => \n          conv.id === currentConversation.id ? conversationWithResponse : conv\n        ))\n      }, 1000)\n    }\n  }\n\n  const startNewConversation = () => {\n    const newConversation: Conversation = {\n      id: conversations.length + 1,\n      title: 'New chat',\n      messages: [],\n    }\n    setConversations([...conversations, newConversation])\n    setCurrentConversation(newConversation)\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      {/* Sidebar */}\n      <div className={`bg-gray-900 text-white ${isSidebarOpen ? 'w-64' : 'w-0'} transition-all duration-300 ease-in-out overflow-hidden`}>\n        <div className=\"p-4\">\n          <Button onClick={startNewConversation} variant=\"outline\" className=\"w-full justify-start\">\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\n            New chat\n          </Button>\n        </div>\n        <ScrollArea className=\"h-[calc(100vh-5rem)] px-4\">\n          {conversations.map((conv) => (\n            <Button\n              key={conv.id}\n              variant=\"ghost\"\n              className=\"w-full justify-start mb-1 text-left\"\n              onClick={() => setCurrentConversation(conv)}\n            >\n              {conv.title}\n            </Button>\n          ))}\n        </ScrollArea>\n      </div>\n\n      {/* Main chat area */}\n      <div className=\"flex-1 flex flex-col\">\n        <header className=\"bg-white border-b p-4 flex items-center\">\n          <Button variant=\"ghost\" size=\"icon\" onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"mr-2\">\n            <Menu className=\"h-6 w-6\" />\n          </Button>\n          <h1 className=\"text-xl font-semibold\">{currentConversation.title}</h1>\n        </header>\n        <ScrollArea className=\"flex-1 p-4\">\n          {currentConversation.messages.map((message) => (\n            <div key={message.id} className={`flex mb-4 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n              <div className={`flex items-start max-w-[80%] ${message.role === 'user' ? 'flex-row-reverse' : 'flex-row'}`}>\n                <Avatar className=\"w-8 h-8\">\n                  <AvatarFallback>{message.role === 'user' ? 'U' : 'A'}</AvatarFallback>\n                  <AvatarImage src={message.role === 'user' ? '/user-avatar.png' : '/assistant-avatar.png'} />\n                </Avatar>\n                <div className={`mx-2 p-3 rounded-lg ${\n                  message.role === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\n                }`}>\n                  {message.content}\n                </div>\n              </div>\n            </div>\n          ))}\n        </ScrollArea>\n        <div className=\"p-4 border-t bg-white\">\n          <form onSubmit={(e) => { e.preventDefault(); handleSendMessage(); }} className=\"flex items-center\">\n            <Input\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              className=\"flex-grow mr-2\"\n            />\n            <Button type=\"submit\" size=\"icon\" disabled={!input.trim()}>\n              <Send className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Send message</span>\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}